



#Cargar paquetes
obtenerPaquetes <- function(PACKAGES){
   # PACKAGES es una lista con los nombres de los paquetes a utilizar.  
	for (package in PACKAGES ) {
	if (!require(package, character.only=T, quietly=T)) {
		install.packages(package)
		library(package)
	}
	}
}

#Generar directorio de trabajo
establecerDirTrabajo <- function(DIR){
	# Se establece el valor de las variables usadas en
	# las siguientes funciones
	if( !file.exists(DIR) ) {
		dir.create(file.path(DIR), recursive=TRUE) 
		if( !dir.exists(DIR) ) {
			stop("No existe directorio")
		}
	}
	setwd(DIR)
}

obtenerArchivos <- function(FILES, DIR, URL){
	# FILES es la lista de archivos para ser descargados.
	# Otras variables deben ser declaradas para evitar colocar rutas en el código.
	for( file in FILES ){
		# Se valida si el archivo descompactado ya existe en el área de datos.
		if( ! file.exists( DIR )) {
			# Si no existe se busca el archivo compactado en el área de descarga.
			if( ! file.exists( DIR ) ){
				download.file( URL + file, file ) 
			}
			unzip( file )
		}
	}
}

fusionarArchivos <- function(FILES){
# …
if( exists("Fatalities") ){
    		rm(Fatalities)
}
# ...

# …
for( file in FILES ){
    		if( !exists("Fatalities" ) ) {
        			Fatalities<-read.csv( file, header=T, sep=",", na.strings="")
        			# Cualquier otra cosa que haga falta…
			nrow(Fatalities)
			length(Fatalities)
    		} 
# ...

# ...
   		 else {
        			data<-read.csv(file, header=T, sep=",", na.strings="")
        			Fatalities<-rbind(Fatalities,data)
        			# Cualquier otra cosa que haga falta…
			nrow(data)
			length(data)
    		}
}
# Se elimina la variable temporal.
rm(data)
# ...
}


obtenerPaquetes(c("mPlot"))
establecerDirTrabajo("~/Documentos")
obtenerArchivos(c("StormEvents_fatalities-ftp_v1.0_d1951_c20160223.csv.gz"), "~/Documentos", "http://www1.ncdc.noaa.gov/pub/data/swdi/stormevents/csvfiles/")
fusionarArchivos(c("StormEvents_fatalities-ftp_v1.0_d1951_c20160223.csv.gz"))

